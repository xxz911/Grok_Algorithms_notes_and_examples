# У алгоритма k ближайших соседей есть два основных применения:
# 1. классификация(распределение по категориям)
# 2. регрессия(прогнозирование ответа в числовом выражении)


# Нам надо определить что за фрукт перед нами(выбираем между апельсином и грейпфрутом)

# МЫ знаем, что грейпфруты обычно крупнее, а кожура у них более красная чем у апельсинов
# Мы строим что-то наподобие графика, где ось x это цвет(от оранжевого к красному),
# а ось y это размер(от малого до большого_
# Наносим на него точки для апельсина и грейпфрута(несколько, в зависимости от возможных их видов)
# Теперь наносим нашу одну точку с фруктом, который мы ищем и выбираем(например 3 соседних точки),
# каких точек соседей больше, таким и наш загадочный фрукт скорее всего и является


# Мы сравнивали фрукты на основании их размера и цвета кожура - т.е. ПРИЗНАКАМ
# Теперь предположим что у нас есть три фрукта и нам надо извлечь из них информацию,
# то-есть провести ИЗВЛЕЧЕНИЕ ПРИЗНАКОВ

# Данные трёх фруктов наносятся на график(3 точки на графике), чтобы узнать насколько ближние точки схожи,
# Измерим степень их сходства, для вычисления расстояния между двумя точками применяется ФОРМУЛА ПИФАГОРА
# квадратный корень((x1-x2)в квадрате + (y1 -y2)в квадрате)
# В результате получаем расстояние(в цифре) между двумя точками,
# досчитываем расстояние между всеми точками и узнаем насколько точки близки между собой


# Задача с Netflix
# Предположим, что при регистрации пользователя ему предлагают оценить несколько категорий фильмов,
# таким образом появляется набор оценок каждого пользователя
# Тут нам также надо вычислить насколько вкусы пользователей схожи, но у нас не 2 а целых 5 признаков(жанров кино)
# мы так же используем формулу пифагора, но уже с 5-ю переменными
# по итогу, если пользователю понравился фильм, то Netflix может советовать этот же фильм его ближайшему соседу

# Теперь предположим, что порекомендовать фильм нам мало,
# нам надо СПРОГНОЗИРОВАТЬ оценку конкретного фильма конкретным пользователем

# Возьмем 5(лучше выбирать кол-во соседей по формуле sqrt(N),
# так как слишком малое кол-во соседей может исказить результат) соседей для этого пользователя,
# вычислим среднее значение оценок для этого фильма соседями нашего пользователя и получим ответ
# такой прогноз называется РЕГРЕССИЕЙ


# Задача Булочная
# Представим, что мы открыли булочную и каждый день печем хлеб
# Нам надо предсказать сколько хлеба надо испечь сегодня, у нас есть несколько признаков:
# 1. Погода по шкале от 1 до 5(1 плохая, 5 отличная).
# 2. Праздник или выходной(1 праздник или выходной, 0 в противном случае)
# 3. Проходят ли сегодня спортивные игры(1 да, 2 нет)
# 4. Мы знаем сколько хлеба было продано в прошлом при разных сочетаниях признаков

# Наносим на график прошлые дни, ставим наш день на график(используя показатели сегодняшних признаков) и ищем 4 соседей
# вычисляем среднее арифметическое продаж для этих 4-х соседей и получаем кол-ва хлеба, сколько нужно испечь сегодня


# Если бы Netflix давал при регистрации своим пользователям оценить фильмы ОНО, ОНО 2, ОНО 3,
# то это бы ничего не сказало об их вкусах в кино и получилась бы очень плохая рекомендательная система,
# ПОЭТОМУ когда мы работаем с алгоритмом k ближайших соседей, очень важно правильно выбрать признаки для сравнения,
# под правильным выбором следует понимать:
# - Признаки, напрямую связанные с фильмами, которые мы пытаемся рекомендовать
# - Признаки, не содержащие смещения(например, если предлагать пользователям оценивать только комедии,
# мы не получим никакой информации об их отношении к боевикам)


# Знакомство с машинным обучением
# Примеров много, один из них
# OCR(Optical Character Recognition), то-есть оптическое распознавание текста
# Иначе говоря, мы берем фотографию страницы текста, а компьютер автоматически преобразует изображение в текст
# Например на изображении цифра 7
# В основе лежит алгоритм k ближайших соседей:
# 1. Перебирается изображение цифр и извлекается признак(называется ТРЕНИРОВКОЙ)
# 2. Получив новое изображение, извлекаются признаки и проверяются с ближайшими соседями
# Признаками для цифр может служить линии, точки и кривые

# Прогноз на биржевых торгах и т.п, машинное обучение часто использует алгоритм k ближайших соседей в своей основе






